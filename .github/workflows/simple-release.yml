# HarborAI 简化发布流水线
name: Simple Release

on:
  push:
    tags:
      - 'simple-v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: '发布版本号 (例如: simple-v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

env:
  PYTHON_VERSION: '3.10'

jobs:
  # 简化版本验证
  validate:
    name: 验证版本
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 验证版本号
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/}"
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "✅ 版本号: $VERSION"

  # 基础测试
  test:
    name: 基础测试
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: 验证项目结构
        run: |
          echo "✅ 检查项目结构"
          ls -la harborai/
          python -c "import harborai; print(f'版本: {harborai.__version__}')"
          echo "✅ 项目结构正常"

  # 构建包
  build:
    name: 构建包
    runs-on: ubuntu-latest
    needs: [validate, test]
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: 安装构建工具
        run: |
          python -m pip install --upgrade pip
          pip install build hatchling
          
      - name: 构建分发包
        run: |
          python -m build
          ls -la dist/
          
      - name: 上传构建产物
        uses: actions/upload-artifact@v3
        with:
          name: dist-packages
          path: dist/

  # 创建Release
  release:
    name: 创建Release
    runs-on: ubuntu-latest
    needs: [validate, test, build]
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 下载构建产物
        uses: actions/download-artifact@v3
        with:
          name: dist-packages
          path: dist/
          
      - name: 生成发布说明
        id: changelog
        run: |
          VERSION="${{ needs.validate.outputs.version }}"
          CHANGELOG="## 🚀 HarborAI $VERSION (简化发布)\n\n"
          CHANGELOG+="### 📋 变更内容\n\n"
          CHANGELOG+="- 修复版本号不匹配问题\n"
          CHANGELOG+="- 添加 CLI serve 命令\n"
          CHANGELOG+="- 优化发布流程\n\n"
          CHANGELOG+="### 📦 安装方式\n\n"
          CHANGELOG+="\`\`\`bash\n"
          CHANGELOG+="pip install harborai==${VERSION#simple-v}\n"
          CHANGELOG+="\`\`\`\n"
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo -e "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: 创建Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.validate.outputs.version }}
          name: HarborAI ${{ needs.validate.outputs.version }} (简化版)
          body: ${{ steps.changelog.outputs.changelog }}
          prerelease: true
          files: |
            dist/*
          token: ${{ secrets.GITHUB_TOKEN }}

  # 发布到TestPyPI
  publish:
    name: 发布到TestPyPI
    runs-on: ubuntu-latest
    needs: [validate, release]
    environment:
      name: testpypi
      url: https://test.pypi.org/p/harborai
    permissions:
      id-token: write
    steps:
      - name: 下载构建产物
        uses: actions/download-artifact@v3
        with:
          name: dist-packages
          path: dist/
          
      - name: 发布到TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  # 通知
  notify:
    name: 发布通知
    runs-on: ubuntu-latest
    needs: [validate, release, publish]
    if: always() && needs.release.result == 'success'
    steps:
      - name: 发送通知
        run: |
          VERSION="${{ needs.validate.outputs.version }}"
          echo "🎉 HarborAI $VERSION 简化版发布成功！"
          echo "📦 TestPyPI: https://test.pypi.org/project/harborai/"
          echo "📋 发布说明: https://github.com/${{ github.repository }}/releases/tag/$VERSION"