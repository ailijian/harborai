# HarborAI 环境变量配置示例
# 复制此文件为 .env 并填入实际值

# =============================================================================
# API 密钥配置 - 各大模型厂商的 API 密钥
# =============================================================================

# OpenAI API 配置
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_ORG_ID=org-your-organization-id

# DeepSeek API 配置 (支持推理模型 DeepSeek-R1)
DEEPSEEK_API_KEY=sk-your-deepseek-api-key-here
DEEPSEEK_BASE_URL=https://api.deepseek.com

# 火山引擎豆包 API 配置
DOUBAO_API_KEY=your-doubao-api-key-here
DOUBAO_BASE_URL=https://ark.cn-beijing.volces.com/api/v3
DOUBAO_REGION=cn-beijing

# 百度文心一言 API 配置
WENXIN_API_KEY=your-wenxin-api-key-here
WENXIN_SECRET_KEY=your-wenxin-secret-key-here
WENXIN_BASE_URL=https://aip.baidubce.com

# Anthropic Claude API 配置
ANTHROPIC_API_KEY=sk-ant-your-anthropic-api-key-here
ANTHROPIC_BASE_URL=https://api.anthropic.com

# =============================================================================
# 数据库配置 - PostgreSQL 用于日志存储和持久化
# =============================================================================

# PostgreSQL 数据库连接配置
DATABASE_URL=postgresql://username:password@localhost:5432/harborai
DB_HOST=localhost
DB_PORT=5432
DB_NAME=harborai
DB_USER=harborai_user
DB_PASSWORD=your-secure-password
DB_SSL_MODE=prefer

# 数据库连接池配置
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30

# =============================================================================
# 日志配置 - 异步日志系统设置
# =============================================================================

# 日志级别 (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# 日志输出目录
LOG_DIR=./logs

# 是否启用异步日志
ASYNC_LOGGING=true

# 日志队列大小
LOG_QUEUE_SIZE=10000

# 日志批处理大小
LOG_BATCH_SIZE=100

# 日志刷新间隔 (秒)
LOG_FLUSH_INTERVAL=5

# 是否启用日志脱敏
LOG_SANITIZATION=true

# 是否记录请求/响应内容
LOG_REQUEST_RESPONSE=true

# =============================================================================
# 追踪和监控配置
# =============================================================================

# 是否启用全链路追踪
TRACING_ENABLED=true

# Trace ID 生成方式 (uuid4, timestamp, custom)
TRACE_ID_TYPE=uuid4

# 是否启用性能监控
PERFORMANCE_MONITORING=true

# 监控数据采样率 (0.0-1.0)
MONITORING_SAMPLE_RATE=0.1

# =============================================================================
# 成本统计配置
# =============================================================================

# 是否启用成本追踪
COST_TRACKING=true

# 成本计算货币单位
COST_CURRENCY=USD

# API 价格配置 (每1K tokens的价格)
# OpenAI GPT-4 价格
OPENAI_GPT4_INPUT_PRICE=0.03
OPENAI_GPT4_OUTPUT_PRICE=0.06

# OpenAI GPT-3.5 价格
OPENAI_GPT35_INPUT_PRICE=0.0015
OPENAI_GPT35_OUTPUT_PRICE=0.002

# DeepSeek 价格
DEEPSEEK_INPUT_PRICE=0.0014
DEEPSEEK_OUTPUT_PRICE=0.0028

# =============================================================================
# 重试和容错配置
# =============================================================================

# 默认重试次数
DEFAULT_RETRY_COUNT=3

# 重试间隔基数 (秒)
RETRY_BASE_DELAY=1

# 重试最大间隔 (秒)
RETRY_MAX_DELAY=60

# 重试指数退避因子
RETRY_BACKOFF_FACTOR=2

# 是否启用 jitter (随机化重试间隔)
RETRY_JITTER=true

# 请求超时时间 (秒)
REQUEST_TIMEOUT=30

# 连接超时时间 (秒)
CONNECT_TIMEOUT=10

# =============================================================================
# 结构化输出配置
# =============================================================================

# 默认结构化输出提供者 (agently, native)
DEFAULT_STRUCTURED_PROVIDER=agently

# Agently 配置
AGENTLY_TIMEOUT=30
AGENTLY_MAX_RETRIES=3

# 是否启用流式结构化输出
STREAM_STRUCTURED_OUTPUT=true

# =============================================================================
# 缓存配置
# =============================================================================

# 是否启用响应缓存
CACHE_ENABLED=false

# 缓存类型 (memory, redis)
CACHE_TYPE=memory

# Redis 缓存配置 (当 CACHE_TYPE=redis 时)
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_DB=0

# 缓存过期时间 (秒)
CACHE_TTL=3600

# =============================================================================
# 安全配置
# =============================================================================

# API 密钥加密密钥 (用于存储时加密)
ENCRYPTION_KEY=your-32-character-encryption-key-here

# 是否启用 API 密钥轮换
API_KEY_ROTATION=false

# API 密钥轮换间隔 (天)
API_KEY_ROTATION_DAYS=30

# 是否启用请求签名验证
REQUEST_SIGNING=false

# =============================================================================
# 开发和调试配置
# =============================================================================

# 运行环境 (development, staging, production)
ENVIRONMENT=development

# 是否启用调试模式
DEBUG=true

# 是否启用详细错误信息
VERBOSE_ERRORS=true

# 是否启用 API 调用模拟 (用于测试)
MOCK_API_CALLS=false

# 测试模式下的固定响应
TEST_FIXED_RESPONSE=false

# =============================================================================
# 插件配置
# =============================================================================

# 插件目录
PLUGIN_DIR=./harborai/core/plugins

# 是否启用插件自动发现
PLUGIN_AUTO_DISCOVERY=true

# 插件加载超时 (秒)
PLUGIN_LOAD_TIMEOUT=10

# =============================================================================
# 限流配置
# =============================================================================

# 是否启用客户端限流
RATE_LIMITING=true

# 每分钟最大请求数
MAX_REQUESTS_PER_MINUTE=60

# 每小时最大请求数
MAX_REQUESTS_PER_HOUR=1000

# 限流窗口类型 (sliding, fixed)
RATE_LIMIT_WINDOW=sliding

# =============================================================================
# 数据生命周期管理
# =============================================================================

# 日志数据保留天数
LOG_RETENTION_DAYS=30

# 追踪数据保留天数
TRACE_RETENTION_DAYS=7

# 成本数据保留天数 (永久保存设为 -1)
COST_RETENTION_DAYS=-1

# 是否启用自动数据清理
AUTO_CLEANUP=true

# 数据清理执行时间 (24小时制，如 02:00)
CLEANUP_TIME=02:00

# =============================================================================
# 通知配置
# =============================================================================

# 是否启用错误通知
ERROR_NOTIFICATIONS=false

# 通知方式 (email, webhook, slack)
NOTIFICATION_TYPE=webhook

# Webhook URL (当 NOTIFICATION_TYPE=webhook 时)
NOTIFICATION_WEBHOOK_URL=https://your-webhook-url.com/notify

# 邮件通知配置 (当 NOTIFICATION_TYPE=email 时)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password
NOTIFICATION_EMAIL_TO=admin@yourcompany.com

# =============================================================================
# Docker 和部署配置
# =============================================================================

# Docker 网络名称
DOCKER_NETWORK=harborai-network

# PostgreSQL Docker 容器配置
POSTGRES_CONTAINER_NAME=harborai-postgres
POSTGRES_DOCKER_IMAGE=postgres:15

# 是否在 Docker 中运行
RUNNING_IN_DOCKER=false

# 容器健康检查间隔 (秒)
HEALTH_CHECK_INTERVAL=30