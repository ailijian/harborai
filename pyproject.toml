[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "harborai"
version = "0.1.0"
authors = [
    {name = "HarborAI Team", email = "team@harborai.dev"},
]
description = "A unified LLM client with OpenAI-compatible interface and advanced features"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
keywords = [
    "llm",
    "openai",
    "ai",
    "machine-learning",
    "artificial-intelligence",
    "chatgpt",
    "gpt",
    "api",
    "client",
    "sdk",
    "deepseek",
    "doubao",
    "wenxin",
    "reasoning",
    "structured-output",
]
dependencies = [
    "openai>=1.0.0",
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "agently>=3.0.0",
    "asyncio-throttle>=1.0.0",
    "structlog>=23.0.0",
    "psutil>=5.9.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "tenacity>=8.2.0",
    "click>=8.1.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.0",
]
database = [
    "asyncpg>=0.28.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
]
all = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.0",
    "asyncpg>=0.28.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
]

[project.scripts]
harborai = "harborai.cli.main:cli"

[project.urls]
"Homepage" = "https://github.com/harborai/harborai"
"Bug Reports" = "https://github.com/harborai/harborai/issues"
"Source" = "https://github.com/harborai/harborai"
"Documentation" = "https://docs.harborai.dev"

[tool.setuptools.packages.find]
where = ["."] 
exclude = ["tests*"]

[tool.setuptools.package-data]
harborai = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "agently.*",
    "asyncio_throttle.*",
    "structlog.*",
    "psutil.*",
    "tenacity.*",
    "rich.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["harborai"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"